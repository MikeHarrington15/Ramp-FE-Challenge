{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nimport { useCustomFetch } from \"./useCustomFetch\";\nexport function useTransactionsByEmployee() {\n  _s();\n  const {\n    fetchWithCache,\n    loading\n  } = useCustomFetch();\n  const [transactionsByEmployee, setTransactionsByEmployee] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0); // <-- Added this state for page\n\n  const fetchById = useCallback(async (employeeId, page = 0) => {\n    const data = await fetchWithCache(\"transactionsByEmployee\", {\n      employeeId,\n      page\n    });\n    setTransactionsByEmployee(data);\n    setCurrentPage(page);\n  }, [fetchWithCache]);\n  const invalidateData = useCallback(() => {\n    setTransactionsByEmployee(null);\n  }, []);\n  return {\n    data: transactionsByEmployee,\n    loading,\n    fetchById,\n    invalidateData,\n    page: currentPage\n  }; // <-- Included the current page in the returned object\n}\n_s(useTransactionsByEmployee, \"n6MJZTKqQhmYKz+z6ckVsIGh6Sc=\", false, function () {\n  return [useCustomFetch];\n});","map":{"version":3,"names":["useCallback","useState","useCustomFetch","useTransactionsByEmployee","_s","fetchWithCache","loading","transactionsByEmployee","setTransactionsByEmployee","currentPage","setCurrentPage","fetchById","employeeId","page","data","invalidateData"],"sources":["/Users/michaelharrington/Documents/Professional/ramp-fe-challenge/src/hooks/useTransactionsByEmployee.ts"],"sourcesContent":["import { useCallback, useState } from \"react\"\nimport { RequestByEmployeeParams, Transaction } from \"../utils/types\"\nimport { TransactionsByEmployeeResult } from \"./types\"\nimport { useCustomFetch } from \"./useCustomFetch\"\n\nexport function useTransactionsByEmployee(): TransactionsByEmployeeResult {\n  const { fetchWithCache, loading } = useCustomFetch()\n  const [transactionsByEmployee, setTransactionsByEmployee] = useState<Transaction[] | null>(null)\n  const [currentPage, setCurrentPage] = useState(0) // <-- Added this state for page\n\n  const fetchById = useCallback(\n    async (employeeId: string, page: number = 0) => {\n      const data = await fetchWithCache<Transaction[], RequestByEmployeeParams>(\n        \"transactionsByEmployee\",\n        {\n          employeeId,\n          page,\n        }\n      )\n\n      setTransactionsByEmployee(data)\n      setCurrentPage(page)\n    },\n    [fetchWithCache]\n  )\n\n  const invalidateData = useCallback(() => {\n    setTransactionsByEmployee(null)\n  }, [])\n\n  return { data: transactionsByEmployee, loading, fetchById, invalidateData, page: currentPage } // <-- Included the current page in the returned object\n}\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAG7C,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,SAASC,yBAAyBA,CAAA,EAAiC;EAAAC,EAAA;EACxE,MAAM;IAAEC,cAAc;IAAEC;EAAQ,CAAC,GAAGJ,cAAc,CAAC,CAAC;EACpD,MAAM,CAACK,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGP,QAAQ,CAAuB,IAAI,CAAC;EAChG,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,EAAC;;EAElD,MAAMU,SAAS,GAAGX,WAAW,CAC3B,OAAOY,UAAkB,EAAEC,IAAY,GAAG,CAAC,KAAK;IAC9C,MAAMC,IAAI,GAAG,MAAMT,cAAc,CAC/B,wBAAwB,EACxB;MACEO,UAAU;MACVC;IACF,CACF,CAAC;IAEDL,yBAAyB,CAACM,IAAI,CAAC;IAC/BJ,cAAc,CAACG,IAAI,CAAC;EACtB,CAAC,EACD,CAACR,cAAc,CACjB,CAAC;EAED,MAAMU,cAAc,GAAGf,WAAW,CAAC,MAAM;IACvCQ,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEM,IAAI,EAAEP,sBAAsB;IAAED,OAAO;IAAEK,SAAS;IAAEI,cAAc;IAAEF,IAAI,EAAEJ;EAAY,CAAC,EAAC;AACjG;AAACL,EAAA,CA1BeD,yBAAyB;EAAA,QACHD,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}