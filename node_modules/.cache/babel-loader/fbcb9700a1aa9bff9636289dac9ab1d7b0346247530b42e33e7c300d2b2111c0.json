{"ast":null,"code":"var _jsxFileName = \"/Users/michaelharrington/Documents/Professional/ramp-fe-challenge/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState(null);\n  const [hasMoreTransactions, setHasMoreTransactions] = useState(true);\n  const transactions = useMemo(() => {\n    var _ref, _paginatedTransaction;\n    return (_ref = (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : transactionsByEmployee) !== null && _ref !== void 0 ? _ref : null;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setSelectedEmployeeId(null);\n    transactionsByEmployeeUtils.invalidateData();\n    await employeeUtils.fetchAll();\n    const result = await paginatedTransactionsUtils.fetchAll();\n    setHasMoreTransactions(result.hasMore);\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    setSelectedEmployeeId(employeeId);\n    paginatedTransactionsUtils.invalidateData();\n    await transactionsByEmployeeUtils.fetchById(employeeId);\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  const handleViewMoreClick = async () => {\n    if (selectedEmployeeId) {\n      await loadTransactionsByEmployee(selectedEmployeeId);\n    } else {\n      await loadAllTransactions();\n    }\n  }\n\n  // In your JSX:\n  ;\n  /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"RampButton\",\n    disabled: paginatedTransactionsUtils.loading,\n    onClick: handleViewMoreClick // use the new handler here\n    ,\n    children: \"View More\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 4\n  }, this);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: employeeUtils.loading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          console.log(\"InputSelect onChange triggered\", newValue);\n          if (newValue === null) {\n            return;\n          }\n          if (newValue.id === EMPTY_EMPLOYEE.id) {\n            await loadAllTransactions();\n          } else {\n            await loadTransactionsByEmployee(newValue.id);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), transactions !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading,\n          onClick: handleViewMoreClick,\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xp6F5ZC3/pmzgXmI8b8c+786YZE=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","jsxDEV","_jsxDEV","App","_s","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","selectedEmployeeId","setSelectedEmployeeId","hasMoreTransactions","setHasMoreTransactions","transactions","_ref","_paginatedTransaction","loadAllTransactions","invalidateData","fetchAll","result","hasMore","loadTransactionsByEmployee","employeeId","fetchById","handleViewMoreClick","className","disabled","loading","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoading","defaultValue","items","label","loadingLabel","parseItem","item","value","id","firstName","lastName","onChange","newValue","console","log","_c","$RefreshReg$"],"sources":["/Users/michaelharrington/Documents/Professional/ramp-fe-challenge/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [selectedEmployeeId, setSelectedEmployeeId] = useState<string | null>(null)\n  const [hasMoreTransactions, setHasMoreTransactions] = useState(true)\n\n  const transactions = useMemo(\n    () => paginatedTransactions?.data ?? transactionsByEmployee ?? null,\n    [paginatedTransactions, transactionsByEmployee]\n  )\n\n  const loadAllTransactions = useCallback(async () => {\n    setSelectedEmployeeId(null)\n    transactionsByEmployeeUtils.invalidateData()\n\n    await employeeUtils.fetchAll()\n\n    const result = await paginatedTransactionsUtils.fetchAll()\n    setHasMoreTransactions(result.hasMore)\n  }, [employeeUtils, paginatedTransactionsUtils, transactionsByEmployeeUtils])\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      setSelectedEmployeeId(employeeId)\n      paginatedTransactionsUtils.invalidateData()\n      await transactionsByEmployeeUtils.fetchById(employeeId)\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n\n  const handleViewMoreClick = async () => {\n    if (selectedEmployeeId) {\n      await loadTransactionsByEmployee(selectedEmployeeId)\n    } else {\n      await loadAllTransactions()\n    }\n  }\n\n  // In your JSX:\n  ;<button\n    className=\"RampButton\"\n    disabled={paginatedTransactionsUtils.loading}\n    onClick={handleViewMoreClick} // use the new handler here\n  >\n    View More\n  </button>\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={employeeUtils.loading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            console.log(\"InputSelect onChange triggered\", newValue)\n            if (newValue === null) {\n              return\n            }\n\n            if (newValue.id === EMPTY_EMPLOYEE.id) {\n              await loadAllTransactions()\n            } else {\n              await loadTransactionsByEmployee(newValue.id)\n            }\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactions !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={handleViewMoreClick}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}