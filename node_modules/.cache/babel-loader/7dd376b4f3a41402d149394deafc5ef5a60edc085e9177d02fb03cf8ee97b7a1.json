{"ast":null,"code":"var _jsxFileName = \"/Users/michaelharrington/Documents/Professional/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx\",\n  _s = $RefreshSig$();\nimport { InputCheckbox } from \"../InputCheckbox\";\nimport { useApprovals } from \"../TableActions/approvalsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionPane = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval\n}) => {\n  _s();\n  var _approvals$transactio;\n  const {\n    approvals,\n    setApprovals\n  } = useApprovals();\n  const approved = (_approvals$transactio = approvals[transaction.id]) !== null && _approvals$transactio !== void 0 ? _approvals$transactio : transaction.approved;\n  const handleCheckboxChange = async newValue => {\n    await consumerSetTransactionApproval({\n      transactionId: transaction.id,\n      newValue\n    });\n    setApprovals(prevApprovals => ({\n      ...prevApprovals,\n      [transaction.id]: newValue\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampPane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampPane--content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText\",\n        children: [transaction.merchant, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: moneyFormatter.format(transaction.amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"RampText--hushed RampText--s\",\n        children: [transaction.employee.firstName, \" \", transaction.employee.lastName, \" - \", transaction.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputCheckbox, {\n      id: transaction.id,\n      checked: approved,\n      disabled: loading,\n      onChange: async newValue => {\n        await consumerSetTransactionApproval({\n          transactionId: transaction.id,\n          newValue\n        });\n        setApproved(newValue);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionPane, \"273Jsp/3SpKIyAUe9H/nuyMATC4=\", false, function () {\n  return [useApprovals];\n});\n_c = TransactionPane;\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n});\nvar _c;\n$RefreshReg$(_c, \"TransactionPane\");","map":{"version":3,"names":["InputCheckbox","useApprovals","jsxDEV","_jsxDEV","TransactionPane","transaction","loading","setTransactionApproval","consumerSetTransactionApproval","_s","_approvals$transactio","approvals","setApprovals","approved","id","handleCheckboxChange","newValue","transactionId","prevApprovals","className","children","merchant","fileName","_jsxFileName","lineNumber","columnNumber","moneyFormatter","format","amount","employee","firstName","lastName","date","checked","disabled","onChange","setApproved","_c","Intl","NumberFormat","style","currency","$RefreshReg$"],"sources":["/Users/michaelharrington/Documents/Professional/ramp-fe-challenge/src/components/Transactions/TransactionPane.tsx"],"sourcesContent":["import { useState } from \"react\"\nimport { InputCheckbox } from \"../InputCheckbox\"\nimport { TransactionPaneComponent } from \"./types\"\nimport { useApprovals } from \"../TableActions/approvalsContext\"\n\nexport const TransactionPane = ({\n  transaction,\n  loading,\n  setTransactionApproval: consumerSetTransactionApproval,\n}) => {\n  const { approvals, setApprovals } = useApprovals()\n  const approved = approvals[transaction.id] ?? transaction.approved\n\n  const handleCheckboxChange = async (newValue) => {\n    await consumerSetTransactionApproval({\n      transactionId: transaction.id,\n      newValue,\n    })\n\n    setApprovals((prevApprovals) => ({\n      ...prevApprovals,\n      [transaction.id]: newValue,\n    }))\n  }\n\n  return (\n    <div className=\"RampPane\">\n      <div className=\"RampPane--content\">\n        <p className=\"RampText\">{transaction.merchant} </p>\n        <b>{moneyFormatter.format(transaction.amount)}</b>\n        <p className=\"RampText--hushed RampText--s\">\n          {transaction.employee.firstName} {transaction.employee.lastName} - {transaction.date}\n        </p>\n      </div>\n      <InputCheckbox\n        id={transaction.id}\n        checked={approved}\n        disabled={loading}\n        onChange={async (newValue) => {\n          await consumerSetTransactionApproval({\n            transactionId: transaction.id,\n            newValue,\n          })\n\n          setApproved(newValue)\n        }}\n      />\n    </div>\n  )\n}\n\nconst moneyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\n"],"mappings":";;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,SAASC,YAAY,QAAQ,kCAAkC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/D,OAAO,MAAMC,eAAe,GAAGA,CAAC;EAC9BC,WAAW;EACXC,OAAO;EACPC,sBAAsB,EAAEC;AAC1B,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,qBAAA;EACJ,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGX,YAAY,CAAC,CAAC;EAClD,MAAMY,QAAQ,IAAAH,qBAAA,GAAGC,SAAS,CAACN,WAAW,CAACS,EAAE,CAAC,cAAAJ,qBAAA,cAAAA,qBAAA,GAAIL,WAAW,CAACQ,QAAQ;EAElE,MAAME,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;IAC/C,MAAMR,8BAA8B,CAAC;MACnCS,aAAa,EAAEZ,WAAW,CAACS,EAAE;MAC7BE;IACF,CAAC,CAAC;IAEFJ,YAAY,CAAEM,aAAa,KAAM;MAC/B,GAAGA,aAAa;MAChB,CAACb,WAAW,CAACS,EAAE,GAAGE;IACpB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEb,OAAA;IAAKgB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBjB,OAAA;MAAKgB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCjB,OAAA;QAAGgB,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAEf,WAAW,CAACgB,QAAQ,EAAC,GAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnDtB,OAAA;QAAAiB,QAAA,EAAIM,cAAc,CAACC,MAAM,CAACtB,WAAW,CAACuB,MAAM;MAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDtB,OAAA;QAAGgB,SAAS,EAAC,8BAA8B;QAAAC,QAAA,GACxCf,WAAW,CAACwB,QAAQ,CAACC,SAAS,EAAC,GAAC,EAACzB,WAAW,CAACwB,QAAQ,CAACE,QAAQ,EAAC,KAAG,EAAC1B,WAAW,CAAC2B,IAAI;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNtB,OAAA,CAACH,aAAa;MACZc,EAAE,EAAET,WAAW,CAACS,EAAG;MACnBmB,OAAO,EAAEpB,QAAS;MAClBqB,QAAQ,EAAE5B,OAAQ;MAClB6B,QAAQ,EAAE,MAAOnB,QAAQ,IAAK;QAC5B,MAAMR,8BAA8B,CAAC;UACnCS,aAAa,EAAEZ,WAAW,CAACS,EAAE;UAC7BE;QACF,CAAC,CAAC;QAEFoB,WAAW,CAACpB,QAAQ,CAAC;MACvB;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAhB,EAAA,CA5CYL,eAAe;EAAA,QAKUH,YAAY;AAAA;AAAAoC,EAAA,GALrCjC,eAAe;AA8C5B,MAAMsB,cAAc,GAAG,IAAIY,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACpDC,KAAK,EAAE,UAAU;EACjBC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAAA,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}